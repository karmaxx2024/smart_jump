import sys  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º sys –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
import pygame  # –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Pygame –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä–∞—Ñ–∏–∫–æ–π –∏ —Å–æ–±—ã—Ç–∏—è–º–∏
import random  # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è random –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º)
from settings import screen, white, screen_width, screen_height  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞, —Ü–≤–µ—Ç–∞ –∏ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è
from objects import draw_objects  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
import game_platform  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –º–æ–¥—É–ª—å
from player import Player  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–∏ (–¥–≤–∏–∂–µ–Ω–∏–µ, –ø—Ä—ã–∂–∫–∏, –æ—Ç—Ä–∏—Å–æ–≤–∫–∞)

pygame.init()

def log_debug(text):
    with open("debug.txt", "a") as f:
        f.write(text + "\n")


game_platform.create_starting_platforms()
platforms = game_platform.get_platforms()


log_debug(f"üîπ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã: {platforms}")
print(f"üîπ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã: {len(platforms)}")

# –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–∫–∞
player = Player(screen_width // 2, screen_height - 100)

running = True
clock = pygame.time.Clock()

while running:
    screen.fill(white)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    player.update(keys)

    # –°–∫—Ä–æ–ª–ª–∏–Ω–≥ —ç–∫—Ä–∞–Ω–∞ –≤–≤–µ—Ä—Ö –ø—Ä–∏ –ø—Ä—ã–∂–∫–µ
    if player.rect.top < screen_height // 2:
        scroll = screen_height // 2 - player.rect.top
        player.rect.y += scroll
        for i in range(len(platforms)):
            platforms[i] = (platforms[i][0], platforms[i][1] + scroll)

        # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –µ—Å–ª–∏ —Å–∞–º–∞—è –≤–µ—Ä—Ö–Ω—è—è —É—à–ª–∞ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ
        if platforms and platforms[-1][1] > 100:
            game_platform.create_platform()

    if len(platforms) == 0:
        log_debug("‚ùå –û—à–∏–±–∫–∞! –°–ø–∏—Å–æ–∫ platforms –±—ã–ª –æ–±–Ω—É–ª—ë–Ω!")
        print("‚ùå –û—à–∏–±–∫–∞! –°–ø–∏—Å–æ–∫ platforms –±—ã–ª –æ–±–Ω—É–ª—ë–Ω!")
        game_platform.create_starting_platforms()
        platforms = game_platform.get_platforms()

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º, –≤—ã—à–µ–¥—à–∏—Ö –∑–∞ –Ω–∏–∂–Ω–∏–π –∫—Ä–∞–π —ç–∫—Ä–∞–Ω–∞
    platforms[:] = [p for p in platforms if p[1] < screen_height]

    log_debug(f"üîπ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {platforms}")
    print(f"üîπ –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(platforms)}")

    # –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
    draw_objects()
    for platform in platforms:
        game_platform.draw_platform(platform[0], platform[1])
    player.draw()

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
sys.exit()
